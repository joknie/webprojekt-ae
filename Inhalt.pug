doctype html
html(lang="en")
  head 
    meta(charset="UTF-8")
    title Webprojekt Johannes Knieling (FIAE14)
    link(rel="stylesheet" href="Index.css")

  body
 
    include includes/Header.pug

    main
      p.
        #[span.bold Hinweis:] Auf dieser Seite befinden sich mehrere Links, die 
        auf externe Seiten verweisen. Diese sind mit dem Symbol &#8618; 
        gekennzeichnet. F&uuml;r die verlinkten Seiten und deren Inhalte kann 
        keine Verantwortung &uuml;bernommen werden.

      h3 PUG als HTML-Pr&auml;prozessor

      p.
        Die Arbeit mit HTML erfordert in der Regel viel Tippen und viele 
        Sonderzeichen, etwa bei der Eingabe von HTML-Tags und -Entit&auml;ten. 
        Es gibt viele Ans&auml;tze, diese Arbeit zu vereinfachen und den Code 
        lesbarer zu machen. Eine davon wird hier vorgestellt.
    
      div.center: img.pad-the-dog(src='img/pug.png')
      p.caption.
        Abbildung 1 - Das Logo von Pug zeigt einen Mops (engl. pug) #[br]
        Quelle: 
        #[a(href="https://github.com/pugjs/pug-logo/blob/master/PNG/pug-final-logo_-colour-128.png") &#8618; pug-logo Github-Repository von pugjs]

      p. 
        Die 
        #[a(href="https://github.com/pugjs/pug" target="_blank") &#8618; Template Engine #[span.name Pug]]
        bietet eine vereinfachte Markupsprache, die in HTML umgewandelt werden 
        kann. Dazu verwendet sie die JavaScript-Laufzeitumgebung 
        #[span.name Node.js], mit der ein:e Benutzer:in aber nicht 
        notwendigerweise interagieren muss.

      p. 
        Neben dem vereinfachten Markup bietet #[span.name Pug] Funktionen, die in 
        HTML nicht oder nur unter Einbindung von JavaScript zu realisieren sind. 
        Dazu geh&ouml;ren Variablen, Verzweigungen und Iterationen.

      p.
        #[span.name Pug] bietet zudem M&ouml;glichkeiten, Code aus anderen Dateien
        einzubinden. Dadurch soll das DRY-Prinzip (&#8222;Don&acute;t Repeat
        Yourself&#8220;) auch in HTML anwendbar gemacht werden.

      h4 Format des Pug-Markups

      p. 
        #[span.name Pug] vereinfacht das Markup von HTML durch den Verzicht auf die spitzen 
        Klammern und schlie&szlig;ende Tags. Attribute werden Tags in einfachen 
        Klammern hinzugef&uuml;gt und Klassen k&ouml;nnen in einer Punktnotation
        angef&uuml;gt werden.

      p Der Anfang dieser Seite sieht in #[span.name Pug] folgenderma&szlig;en aus:

      pre.
        h1.invert Webprojekt
        h2 Johannes Knieling, FIAE 14

        p.invert.
          &amp;#9632;
          \#[a(href='Index.html') &Uuml;bersicht]
          &amp;#9632;
          \#[a(href='PAP.html') Programmablaufplan]
          &amp;#9632;
          HTML Template Engine PUG 
          &amp;#9632;
    
      p.caption Codeausschnitt 1 - Ein Beispiel f&uuml;r Formatierung in Pug

      p.
        Die ersten beiden Zeilen sind &Uuml;berschriften, wobei die erste mit
        der Klasse &#8222;invert&#8220; formatiert wird. Der #[span.code p]-Tag wird 
        ebenfalls mit dieser formatiert und stellt die Navigationsleiste dar.
        Besondere Beachtung verdient hier der abschlie&szlig;ende Punkt nach
        der Klasse. Dieser zeigt #[span.name Pug] an, dass ein mehrzeiliger Textblock folgt.

      p.
        Die Zeilen, die den Inhalt des Tags darstellen, sind einger&uuml;ckt,
        da Pug Einr&uuml;ckung zur Hierarchisierung verwendet, &auml;hnlich
        der Programmiersprache #[span.name Python] oder der #[span.name Pug] verwandten Markupsprache
        #[span.name YAML]. 

      p.
        Innerhalb eines anderen Tags m√ºssen HTML-Tags mit den 
        Zeichen #[span.code \#[...]] umschlossen werden, da sie sonst als Text interpretiert 
        werden. Die Raute gibt an, dass #[span.name Pug] beim Umwandeln in HTML stattdessen
        den Ausdruck in den eckigen Klammern als Code interpolieren soll.

      h4 Variablen, Iteration und Verzweigungen 

      p. 
        Eine interessante Funktionalit&auml;tserweiterung gegen&uuml;ber HTML
        ist die M&ouml;glichkeit, Programmierfunktionen wie Variablen,
        Verzweigungen und Iterationen direkt in der #[span.code].pug]-Datei zu verwenden.

      p Ein Beispiel f&uuml;r den Einsatz dieser Funktionen :

      - var i = 1
      - var list = ["Alice", "Bob", "Charlie", "Dave", "Eve", "Frank"]    

      table
        each item in list
          tr          
            if i==list.length
              td.last-in-col=i++
              td.last-in-row.last-in-col=item
            else
              td=i++
              td.last-in-row=item

      p.caption Tabelle 1 - Erzeugen einer Tabelle aus Daten

      p.
        An dieser Tabelle ist zun&auml; nichts ungew&ouml;hnliches zu erkennen. 
        Auch ein Blick in den Seitenquelltext zeigt nur eine herk&ouml;mmliche 
        HTML-Tabelle. In der #[span.name Pug]-Template sieht diese Tabelle allerdings so
        aus:

      pre.
        - var i = 1
        - var list = ["Alice", "Bob", "Charlie", "Dave", "Eve", "Frank"]
      
        table
          each item in list
            tr
              if i==list.length
                td.last-in-col=i++
                td.last-in-row.last-in-col=item
              else
                td=i++
                td.last-in-row=item

      p.caption Codeausschnitt 2 - Erzeugen einer Tabelle aus Daten 
        
      p.
        Statt einer statischen Definition der Tabelle werden in diesem Code aus
        dem Array #[span.code list] (unter Zuhilfenahme einer 
        Z&auml;hlvariable #[span.code i]) die Tabellenzeilen generiert. Dies
        erlaubt das einfache Entfernen oder Hinzuf&uuml;gen von Eintr&auml;gen.
      
      p.
        Auch eine Verzweigung ist hier zu sehen. Die letzte Zeile der Tabelle muss
        aufgrund der CSS-Definitionen als solche ausgezeichnet werden. Dies wird
        durch einen Vergleich der Z&auml;hlvariablen mit der L&auml;nge des
        Arrays erreicht.

      h4 Weitere Funktionen

      p.
        Weitere Funktionen, die #[span.name Pug] bereitstellt, die aber im Rahmen dieses
        Projekts nicht eingesetzt wurden, sollen trotzdem kurz angeschnitten
        werden.

      h5 Includes

      p. 
        Mit dem Befehl &#8222;include&#8220; kann in eine #[span.code .pug]-Datei der Inhalt
        einer anderen #[span.name Pug]-Datei eingbunden werden. Dieser wird an der jeweiligen
        Stelle einge&uuml;gt. Dadurch k&ouml;nnen Seitenbausteine gem&auml;&szlig;
        dem DRY-Prinzip wiederverwendet werden.

      p. 
        W&auml;ren die anderen Seiten dieses Projekt ebenfalls aus einer
        Pug-Vorlage erzeugt worden, w&auml;re es z.B. sinnvoll gewesen, den
        Seitenkopf und die Fu&szlig;zeile jeweils als Include zu realisieren.

      h5 Mixins

      p. 
        Ein wiederverwendbarer Code-Block innerhalb einer Datei wird Mixin
        genannt. Dieser wird einmal definiert und kann dann beliebig oft
        wiederverwendet werden.

      div.flex-container
        div
          p PUG Template:
          pre.
            //- Declaration
            mixin list
            ul
              li foo
              li bar
              li baz
            //- Use
            +list
            +list            
        div
          p Erzeugtes HTML:
          pre.
            &lt;ul&gt;
              &lt;li&gt;foo&lt;/li&gt;
              &lt;li&gt;bar&lt;/li&gt;
              &lt;li&gt;baz&lt;/li&gt;
            &lt;/ul&gt;
            &lt;ul&gt;
              &lt;li&gt;foo&lt;/li&gt;
              &lt;li&gt;bar&lt;/li&gt;
              &lt;li&gt;baz&lt;/li&gt;
            &lt;/ul&gt;

      p.caption.
        Codebeispiel 3 - Mixin zum Erzeugen einer Liste#[br]
        Quelle: 
        #[a(href="https://pugjs.org/language/mixins.html") &#8618; Pug Dokumentation: Mixins]

      p. 
        Durch den zweifachen Aufruf von #[span.code +list]; am Ende des 
        #[span.name Pug]-Ausschnitts werden bei der Konversion zu HTML zwei Listen erzeugt.

      h5 Vererbung

      p. 
        Templates k&ouml;nnen in #[span.name Pug] andere Templates erweitern und deren Inhalt
        erben. In einer vererbenden Template k&ouml;nnen Bl&ouml;cke definiert 
        werden, die entweder mit einen Standardinhalt gef&uuml;llt oder in der 
        Kindtemplate definiert und ersetzt werden k&ouml;nnen.

      h5 Filter

      p. 
        Eine komplexere Funktion sind Filter, mit denen Code in anderen
        Programmiersprachen in eine #[span.name Pug]-Template eingef&uuml;gt werden kann.
        Dabei ist zu beachten, das dieser Code dann beim Kompilieren der 
        Template in eine HTML-Datei interpretiert wird. Deshalb kann mit
        ihnen kein dynamischer Inhalt erzeugt werden.

      h4 Umwandlung von Pug in HTML

      p. 
        Um eine in #[span.name Pug] geschriebene Template in eine HTML-Datei, die ein
        Browser anzeigen kann, umzuwandeln, gibt es mehrere M&ouml;glichkeiten.

      ol
        li.
          Da #[span.name Pug] auf #[span.name Node.js] basiert, kann es, wenn #[span.name Node.js] auf dem System
          installiert ist, &uuml;ber entsprechende Aufrufe des Node Package
          Managers #[span.name npm] umgewandelt werden.
        li
          | Eine Option, die zum Experimentieren einl&auml;dt, sind 
          | Online-Konverter, die oft auch eine Umwandlung in Echtzeit 
          | bereitstellen. Beispiele:
          ul
            li #[a(href="https://pug2html.com/" target="_blank") &#8618; Pug2HTML] 
            li #[a(href="https://pughtml.com/" target="_blank") &#8618; Pug-HTML] 
            li #[a(href="https://www.cssportal.com/pug-to-html/" target="_blank") &#8618; Konverter bei {CSS}Portal]
        li. 
          Plugins in einer IDE k&ouml;nnen ebenfalls Konvertierungen
          durchf&uuml;hren. F&uuml;r dieses Projekt wurde das Plugin 
          #[a.name(href="https://marketplace.visualstudio.com/items?itemName=Wscats.eno" target="_blank") &#8618; Compile Hero Pro]
          f&uuml;r #[span.name Visual Studio Code] verwendet.

      h4 Fazit  
        
      p.
        Die Arbeit mit #[span.name Pug] vereinfacht das Erstellen von Webseiten. Der
        Wegfall der HTML-typischen spitzen Klammern und der schlie&szlig;enden
        Tags erh&ouml;ht die Arbeitsgeschwindigkeit. Die Strukturierung durch
        Einr&uuml;ckungen erzwingt eine konsequent ordentliche Formatierung.
        Beides zusammen erh&ouml;ht die Lesbarkeit des Quelltexts gegen&uuml;ber 
        HTML.

      p.
        In diesem Projekt wurden die M&ouml;glichkeiten, die sich durch die
        zusa&auml;tzlichen Funktionen, die Pug bietet, bestenfalls angedeutet.
        Neben der M&ouml;glichkeit, eine Website unter Ber&uuml;cksichtigung
        des DRY-Prinzips aufzubauen, er&ouml;ffnet die Arbeit mit Daten einen
        sehr gro&szlig;en Spielraum, von dem das oben gezeigte Beispiel des 
        Generierens einer Tabelle nur ein winziger Teil ist.

      p.
        Zum Abschluss noch ein Link zur 
        #[a(href="../Pug.html") #[span.name Pug]-Datei, aus der diese Seite erstellt wurde.] 
        Vergleichen Sie diese doch einmal mit dem HTML-Quelltext dieser Seite
        oder f√ºgen Sie sie in einen der oben verlinkten Konverter ein!

    
    include includes/Footer.pug